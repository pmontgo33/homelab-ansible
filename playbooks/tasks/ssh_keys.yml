- name: Create a 2048-bit SSH key for user for each host
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    generate_ssh_key: yes
    ssh_key_bits: 2048

- name: Fetch the keyfile from one host to another
  become_user: "{{ ansible_user }}"
  ansible.builtin.fetch: 
    src: "~/.ssh/id_rsa.pub"
    dest: "buffer/{{inventory_hostname}}-id_rsa.pub"
    flat: yes
  changed_when: false

- name: Copy the key add to authorized_keys using Ansible module
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ lookup('file','buffer/{{item}}-id_rsa.pub')}}"
  when: item != inventory_hostname
  with_items: 
    - "{{ ansible_play_hosts_all }}"

- name: Remove buffer directory
  file: 
    path: "buffer" 
    state: absent
  run_once: true
  delegate_to: localhost
  changed_when: false

- name: Ensure server is present in known_hosts file
  known_hosts:
    name: "{{ hostvars[item].ansible_host }}"
    state: present
    key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host }}') }}"
    hash_host: true
  become: no
  when: item != inventory_hostname
  with_items: 
    - "{{ ansible_play_hosts_all }}"
    
- name: copy other ssh keys to hosts
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: '{{ item }}'
  with_file:
    - ../public_keys/hp_laptop_id_rsa.pub
    - ../public_keys/phone_id_rsa.pub
